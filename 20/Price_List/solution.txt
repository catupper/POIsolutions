まず、電車の辺(以降a辺)だけで最短距離を求める。これはBFSでO(m)でできる。

b >= 2aのとき飛行機の辺(以降b辺)をすべてa辺2つを利用して移動しても大丈夫なのでa辺のみで考えれば良い。

a辺だけのグラフでのkからの最短経路の辺の本数が偶数である場合、すべて飛行機の辺(以降b辺)で置き換えることができるので、a辺のみ、もしくはb辺のみの場合を考えれば良い。

a辺だけのグラフでの最短経路が奇数の場合1回だけa辺を使うか,一切a辺を使わないかの二通りしか考えられないので,その2つを調べれば良い。
前者はa辺を1回だけ使う経路は自明なので、a辺を使わない経路さえ求まれば良い。

すなわちb辺のみからなるグラフでのbからの最短経路を求めれば良い。
全b辺は最悪n^2個になってしまうので、列挙はできない。
ただしBFSでたどる辺さえわかればよいのでそれを考える。

a辺のみのグラフで以下のBFSをkから始めて行う。
いま注目している辺をxとすると、xにつながっている辺をマークされているかいないかにかかわらず全て探索する。(xとtoを結ぶ辺とする)
そして、toから伸びている辺のうちマークされていない辺探索する。(toとtotoを結ぶの辺とする)
このときxとtotoが結ばれていなかったら、xからtotoを結ぶb辺があるとしてtotoの最短距離を更新する。そしてtoとtotoを結ぶ辺をマークする。
xとtotoが結ばれていたら無視する。

まず、これはbのみの辺のグラフに関して近い順番に頂点をたどることになる。それ故に、マークした辺は2回目以降考えなくても良い（そこをつかっても改善されることはない）。

このBFSをするとき、xとtotoが結ばれていないパターンはたかだかマークする回数すなわちm回しか行われない。
xとtotoが結ばれているパターンは辺xを中心に考えるとxとtotoが結ばれておりxとtoが結ばれているときのことである。
よってxの次数をdeg[x]とすると、たかだかdeg[x]^2回しか探索されない。
また、同じxから探索した時toとtotoの組はすべて異なるのでたかだかm回しか探索されない。
よってxとtotoが結ばれているパターンはmin(deg[x]^2, m)回しか探索されない。

これを全てのxについて考えると。BFSの総計算量は
sum{min(deg[x]^2, m) |x ∈ 全長点} <= sum{sqrt(deg[x]^2 * m) |x ∈ 全長点} = m*sqrt(m)

よってたかだかm*sqrt(m)回しか探索しない　十分間に合う。




